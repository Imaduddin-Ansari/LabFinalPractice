# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['6.0']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: test-rs
          mongodb-port: 27017
      - run: node --version
      - run: npm --version
      - run: |
          cd Authservice
          touch .env
          echo "MONGO_URI=${{secrets.MONGO_URI}}">>.env
          echo "PORT=${{secrets.JWT_SECRET}}">>.env
          echo "JWT_SECRET=${{secrets.PORT1}}">>.env
          npm install
          node server.js &
          sleep 5
          pkill -f "node server.js"
          npm test
      - run: |
          cd Blogservice
          touch .env
          echo "MONGO_URI=${{secrets.MONGO_URI}}">>.env
          echo "PORT=${{secrets.JWT_SECRET}}">>.env
          echo "JWT_SECRET=${{secrets.PORT1}}">>.env
          npm install
          node server.js &
          sleep 5
          pkill -f "node server.js"
          npm test
      - run: |
          cd Commentservice
          touch .env
          echo "MONGO_URI=${{secrets.MONGO_URI}}">>.env
          echo "PORT=${{secrets.JWT_SECRET}}">>.env
          echo "JWT_SECRET=${{secrets.PORT1}}">>.env
          npm install
          node server.js &
          sleep 5
          pkill -f "node server.js"
          npm test
      - run: |
          cd Profileservice
          touch .env
          echo "MONGO_URI=${{secrets.MONGO_URI}}">>.env
          echo "PORT=${{secrets.JWT_SECRET}}">>.env
          echo "JWT_SECRET=${{secrets.PORT1}}">>.env
          npm install
          node server.js &
          sleep 5
          pkill -f "node server.js"
          npm test

      - name : Build Auth Service Docker Image
        run: |
          cd Authservice
          docker build -t authservice .

      - name : Build Blog Service Docker Image
        run: |
          cd Blogservice
          docker build -t blogservice .

      - name : Build Comment Service Docker Image
        run: |
          cd Commentservice
          docker build -t commentservice .

      - name : Build Profile Service Docker Image
        run: |
          cd Profileservice
          docker build -t profileservice .
          
      - name : Checking Images 
        run: |
          docker images
